// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rare_Serverside_GeckosTeam;

#nullable disable

namespace Rare_Serverside_GeckosTeam.Migrations
{
    [DbContext(typeof(RareServerDbContext))]
    [Migration("20230914232256_MigrationWithSeed")]
    partial class MigrationWithSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PostTag", b =>
                {
                    b.Property<int>("PostsId")
                        .HasColumnType("integer");

                    b.Property<int>("TagsId")
                        .HasColumnType("integer");

                    b.HasKey("PostsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("PostTag");
                });

            modelBuilder.Entity("Rare_Serverside_GeckosTeam.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "News"
                        },
                        new
                        {
                            Id = 2,
                            Label = "Sports"
                        },
                        new
                        {
                            Id = 3,
                            Label = "Entertainment"
                        });
                });

            modelBuilder.Entity("Rare_Serverside_GeckosTeam.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("PostId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "This is some smaple data 1",
                            CreatedOn = new DateTime(2023, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "This is some smaple data 2",
                            CreatedOn = new DateTime(2023, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Content = "This is some smaple data 3",
                            CreatedOn = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 3,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Rare_Serverside_GeckosTeam.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("PublicationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Content = "post 1 content",
                            ImageUrl = "www.image1.com",
                            IsApproved = true,
                            Title = "Post 1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Content = "post 2 content",
                            ImageUrl = "www.image2.com",
                            IsApproved = true,
                            Title = "Post 2",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Content = "post 3 content",
                            ImageUrl = "www.image3.com",
                            IsApproved = true,
                            Title = "Post 3",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Rare_Serverside_GeckosTeam.Models.PostReaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PostId")
                        .HasColumnType("integer");

                    b.Property<int>("ReactionId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("ReactionId");

                    b.HasIndex("UserId");

                    b.ToTable("PostsReaction");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PostId = 1,
                            ReactionId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            PostId = 2,
                            ReactionId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            PostId = 3,
                            ReactionId = 3,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Rare_Serverside_GeckosTeam.Models.Reaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Reactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSaqb4DXftSl3QrnGdU-3YGnRzoaCG3OeM1yg&usqp=CAU",
                            Label = "This is Label 1"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ2Q92VIuShEeHGLkcD77lixte1A-ahFgGm_w&usqp=CAU",
                            Label = "This is Label 2"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS3RiKVD7XZmoDVuzkd0m7_ugGlgXGqrTtkiQ&usqp=CAU",
                            Label = "This is Label 3"
                        });
                });

            modelBuilder.Entity("Rare_Serverside_GeckosTeam.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("EndedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("FollowerId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2023, 9, 4, 18, 22, 56, 408, DateTimeKind.Local).AddTicks(2505),
                            EndedOn = new DateTime(2023, 9, 14, 18, 22, 56, 408, DateTimeKind.Local).AddTicks(2534),
                            FollowerId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2023, 6, 14, 18, 22, 56, 408, DateTimeKind.Local).AddTicks(2536),
                            EndedOn = new DateTime(2023, 9, 14, 18, 22, 56, 408, DateTimeKind.Local).AddTicks(2537),
                            FollowerId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2022, 9, 14, 18, 22, 56, 408, DateTimeKind.Local).AddTicks(2539),
                            EndedOn = new DateTime(2023, 9, 14, 18, 22, 56, 408, DateTimeKind.Local).AddTicks(2540),
                            FollowerId = 3,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Rare_Serverside_GeckosTeam.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Tag1"
                        },
                        new
                        {
                            Id = 2,
                            Label = "Tag2"
                        },
                        new
                        {
                            Id = 3,
                            Label = "Tag3"
                        });
                });

            modelBuilder.Entity("Rare_Serverside_GeckosTeam.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsStaff")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Bio = "bio1",
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user1@user.com",
                            FirstName = "user",
                            IsStaff = true,
                            LastName = "one",
                            ProfileImage = "image1",
                            Uid = "user1"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Bio = "bio2",
                            Created = new DateTime(2023, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user2@user.com",
                            FirstName = "user",
                            IsStaff = true,
                            LastName = "two",
                            ProfileImage = "image2",
                            Uid = "user2"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Bio = "bio3",
                            Created = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user3@user.com",
                            FirstName = "user",
                            IsStaff = true,
                            LastName = "three",
                            ProfileImage = "image3",
                            Uid = "user3"
                        });
                });

            modelBuilder.Entity("PostTag", b =>
                {
                    b.HasOne("Rare_Serverside_GeckosTeam.Models.Post", null)
                        .WithMany()
                        .HasForeignKey("PostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rare_Serverside_GeckosTeam.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Rare_Serverside_GeckosTeam.Models.Comment", b =>
                {
                    b.HasOne("Rare_Serverside_GeckosTeam.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rare_Serverside_GeckosTeam.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Rare_Serverside_GeckosTeam.Models.Post", b =>
                {
                    b.HasOne("Rare_Serverside_GeckosTeam.Models.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rare_Serverside_GeckosTeam.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Rare_Serverside_GeckosTeam.Models.PostReaction", b =>
                {
                    b.HasOne("Rare_Serverside_GeckosTeam.Models.Post", "Post")
                        .WithMany("Reactions")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rare_Serverside_GeckosTeam.Models.Reaction", "Reaction")
                        .WithMany("Posts")
                        .HasForeignKey("ReactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rare_Serverside_GeckosTeam.Models.User", "User")
                        .WithMany("PostReactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Reaction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Rare_Serverside_GeckosTeam.Models.Subscription", b =>
                {
                    b.HasOne("Rare_Serverside_GeckosTeam.Models.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Rare_Serverside_GeckosTeam.Models.Category", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Rare_Serverside_GeckosTeam.Models.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Reactions");
                });

            modelBuilder.Entity("Rare_Serverside_GeckosTeam.Models.Reaction", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Rare_Serverside_GeckosTeam.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("PostReactions");

                    b.Navigation("Posts");

                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
